parameters:
  - name: serviceConnectionName
    displayName: Service Connection Name
    type: string
  - name: templateRepoPath
    displayName: Path for cloning build repo
    type: string
    default: agents
  - name: tagFilter
    displayName: Tag Filter
    type: string
    values:
      - ubuntu20
      - ubuntu18
  - name: resourceGroup
    displayName: Resource Group Name
    type: string
  - name: storageAccountName
    displayName: Storage Account Name for Managed Image
    type: string
  - name: location
    displayName: Resource Group Location
    type: string

jobs:
- job: Create${{ parameters.tagFilter }}
  timeoutInMinutes: 480
  variables:
    ${{ if eq(parameters.tagFilter, 'ubuntu20') }}:
      imageType: ubuntu2004
      osType: Linux
      image_packer_file: $(Build.SourcesDirectory)/${{ parameters.templateRepoPath }}/images/linux/ubuntu2004.json
    ${{ if eq(parameters.tagFilter, 'ubuntu18') }}:
      imageType: ubuntu1804
      osType: Linux
      image_packer_file: $(Build.SourcesDirectory)/${{ parameters.templateRepoPath }}/images/linux/ubuntu1804.json

  steps:
    - task: AzureCLI@2
      displayName: Get Service Connection Information
      inputs:
        azureSubscription: ${{ parameters.serviceConnectionName }}
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          subscription_id=$(az account show -o json --query id | sed -e 's/^"//' -e 's/"$//')
          echo "##vso[task.setvariable variable=SUBSCRIPTION_ID;]$subscription_id"
          echo "##vso[task.setvariable variable=SERVICE_PRINCIPAL_ID;]$servicePrincipalId"
          echo "##vso[task.setvariable variable=SERVICE_PRINCIPAL_KEY;]$servicePrincipalKey"
          echo "##vso[task.setvariable variable=TENANT_ID;]$tenantId"
        addSpnToEnvironment: true

    - task: Bash@3
      displayName: "Checkout Microsofts Build Agent Repo"
      inputs:
        targetType: 'inline'
        script: |
          mkdir ${{ parameters.templateRepoPath }}
          git clone https://github.com/actions/virtual-environments.git ${{ parameters.templateRepoPath }}
          cd ${{ parameters.templateRepoPath }}
          # LATEST_TAG=`git tag --sort=committerdate | grep -i "${{ parameters.tagFilter }}" | tail -1`
          # git checkout $LATEST_TAG

    - task: PackerBuild@1
      inputs:
        templateType: custom
        customTemplateLocation: ${{ variables.image_packer_file}}
        customTemplateParameters: '{
          "client_id": "$(SERVICE_PRINCIPAL_ID)",
          "client_secret": "$(SERVICE_PRINCIPAL_KEY)",
          "subscription_id": "$(SUBSCRIPTION_ID)",
          "tenant_id": "$(TENANT_ID)",
          "location": "${{ parameters.location }}",
          "resource_group": "${{ parameters.resourceGroup }}",
          "storage_account": "${{ parameters.storageAccountName }}",
          "capture_name_prefix": "${{ variables.imageType }}"
          }'
        isManagedImage: true 
        managedImageName: ${{ variables.imageType }}
        location: ${{ parameters.location }}
        storageAccountName: ${{ parameters.storageAccountName }}
        azureResourceGroup: ${{ parameters.resourceGroup }}
        imageUri: PACKER_VHD_FILE_URI

    - task: AzureCLI@2
      displayName: Create Managed Image and Add to Image Gallery
      inputs:
        azureSubscription: ${{ parameters.serviceConnectionName }}
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          date=$(date '+%Y.%m.%d')
          imageId=$(az image create \
            -g ${{ parameters.resourceGroup }} \
            -n ${{ variables.imageType }} \
            --os-type ${{ variables.osType}} \
            --source $(PACKER_VHD_FILE_URI) \
            -o json --query id | sed -e 's/^"//' -e 's/"$//')
          az sig image-definition create \
            --resource-group ${{ parameters.resourceGroup }} \
            --gallery-image-definition ${{ variables.imageType }} \
            --gallery-name "travisbuildagentimagegallery" \
            --os-type ${{ variables.osType}} \
            --publisher "self" \
            --offer ${{ variables.imageType }} \
            --sku "latest"
          az sig image-version create \
            --resource-group ${{ parameters.resourceGroup }} \
            --gallery-name "travisbuildagentimagegallery" \
            --gallery-image-definition ${{ variables.imageType }} \
            --gallery-image-version "$date" \
            --managed-image $imageId
          az image delete --ids $imageId
          az storage blob delete-batch \
            -s system \
            --account-name ${{ parameters.storageAccountName }} \
            --pattern Microsoft.Compute/Images/images/${{ variables.imageType }}*
